@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using Umbraco.Extensions
@using Umbraco.Cms.Core.Models.PublishedContent

@{
    Layout = null;
    Context.Response.ContentType = "text/xml";
    const string DATE_FORMAT = "yyyy-MM-ddTHH:mm:sszzz";

    var home = Model.AncestorOrSelf("home");
    var allPages = new List<IPublishedContent>();

    if (home != null)
    {
        var queue = new Queue<IPublishedContent>();
        queue.Enqueue(home);

        while (queue.Any())
        {
            var current = queue.Dequeue();
            var exclude = current.HasValue("excludeFromSitemap") && current.Value<bool>("excludeFromSitemap");

            if (!exclude)
            {
                allPages.Add(current);
            }

            foreach (var child in current.Children().Where(x => x.IsVisible()))
            {
                queue.Enqueue(child);
            }
        }
    }

    // Build XML as string
    var sitemap = new System.Text.StringBuilder();
    sitemap.AppendLine("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
    sitemap.AppendLine("<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">");

    foreach (var page in allPages)
    {
        var loc = page.Url(mode: UrlMode.Auto); // ✅ Correct for Umbraco 15+
        var lastmod = page.UpdateDate.ToString(DATE_FORMAT);
        var priority = page.Level == 1 ? "1.0" : "0.5";

        sitemap.AppendLine("  <url>");
        sitemap.AppendLine($"    <loc>{loc}</loc>");
        sitemap.AppendLine($"    <lastmod>{lastmod}</lastmod>");
        sitemap.AppendLine($"    <priority>{priority}</priority>");
        sitemap.AppendLine("  </url>");
    }

    sitemap.AppendLine("</urlset>");
}

@Html.Raw(sitemap.ToString())
